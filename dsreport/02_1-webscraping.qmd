# University Data {#sec-unidata}

## Web Scraping

In order to explore the Data Science degrees in Australian Universities, we compiled a list of universities in Australia and the Data Science or related degrees they offered, then web scraped required information from each university's website using the R programming language [@Rstats]. In total, we collected 298 units from eight postgraduate courses in Data Science across all Group of Eight (Go8) universities.

To start off the project, Dr. Tanaka provided sample code for data scraping using Monash Handbook as an example. Libraries `rvest` and `RSelenium` are two of the main tools. Initially, we studied her code and then tried to replicate her code to be applied to other university's websites.

The flow of the data scraping is as follow (example code from `uom-master-datasci.qmd`):

1.  Identify the main page (url) where the degree information is contained, which usually is the most updated version of the handbook.
```{.r}
remDr$navigate("https://handbook.unimelb.edu.au/2022/courses/mc-datasc/course-structure")
sub_list <- read_html(remDr$getPageSource()[[1]])
```

2.  Use functions from `rvest` to retrieve all the course unit code (or course unit url). Retrieve the degree code and formal degree name and save it for later.
```{.r}
curriculum <- sub_list %>% 
      html_element("#top") %>% 
      html_element(".mobile-wrap") %>% 
      html_elements("table") %>% 
      html_elements("a") %>% 
      html_attr("href")
```

3.  Use `RSelenium` functions and course unit information, to direct R to the unit information page.

4.  Retrieve the following information from the page using rvest functions:

    -   Unit Name
    -   Unit Code
    -   Unit Overview
    -   Unit Learning Outcome
    -   Unit Prohibition/ Pre-requisite/ Co-requisite

5.  Repeat step 3 & 4 with loop function.
```{.r}
for(unit in curriculum) {
      remDr$navigate(glue("{baseurl}{unit}"))
      wait_time()
      unit_html <- read_html(remDr$getPageSource()[[1]])
      
      # unit name
      subject_text <- unit_html %>% 
        html_element("h1") %>% 
        html_text()
        ...
```

6.  Compile all the retrieved data from the University into a single data table and export it as a csv file.
```{.r}
data <- data %>% 
        bind_rows(tibble(!!!c(list(Course = title, 
                                   #Course_code = "MC-DATASC", 
                                   Course_overview = paste0(coverview, collapse = " "),
                                   #Unit_code = cunit,
                                   Unit = subject_text,
                                   Overview = overview,
                                   Prerequisite = paste0(pre, collapse = ", "),
                                   Corequisite = co,
                                   Prohibition = paste0(pro, collapse = ", "),
                                   Outcomes =lo
                                   ))))
```

Despite the process being similar for each University, we soon realized the process was going to be more challenging than expected.

## Inconsistent Information

Monash University's student handbook on Degrees and Courses is a spectacular website for data scraping. Its html code is clearly labelled and anything you need to know about the degree or course can be found on the website. The same cannot be said about other universities.

The course descriptions on the handbook and universities' website page are usually structured in a different manner, since the majority of the data is collected from universities' handbooks, course descriptions are also extracted from handbooks for consistency purposes.  

In addition, the required unit information listed above is not all available at the targeted universities. The handbook from University of New South Wales contains extremely limited information: unit overview is brief, unit requisites are only available for a few units, and unit outcome is not provided at all. 

## Difficulty in webscraping 

Each university website is unique. Sometimes the information is not straightforward. An example of this is University of Adelaide's course website. The main website for the degree does contain the list of units that go into the degree.

However, instead of having just one page with all the unit information, the link takes you to a page with different unit information depending on when the unit is offered and on what campus.

Tina tried bypassing the pages by directly looking at the url of the final unit information page I want to be on. Unfortunately, the url is not designed or structured in a way which she was able to predict the url based on the current unit code. With that said, her only option was to code the function to jump from pages to pages before landing on the right unit information page.

It is also often found that the unit overview and learning outcomes for each unit within the same university could vary slightly in format. For example, unit overview may appears before or after campus location at University of Western Australia, empty spaces could be found after section title at the University of Melbourne, which would break the chain of extracting corresponding information. 

## Collected Data

```{r setup, include = FALSE}
library(tidyverse)
library(kableExtra)
library(DT)

knitr::opts_chunk$set(echo = FALSE,
                      warning = FALSE,
                      message= FALSE)
theme_set(theme_minimal())
```

```{r read-data, echo=FALSE, message=FALSE, warning=FALSE}
rmv_col <- function(x){
  read_csv(x) %>% 
  select(-`...1`)
}
unidata <- rmv_col("data/unidata.csv")
```

The collected data contains **`r nrow(unidata)` units** from 8 universities, and **`r ncol(unidata)` variables** including School, Course, Course_code, Unit, Unit_code, Outcomes, Overview and Description. 

::: {.content-visible unless-format="pdf"}
The full data set is made available below for exploration, note that blank cells represent data unavailable.
```{r}
unidata %>% 
  mutate(across(c(Outcomes, Overview, description), 
                ~ str_replace_all(.x, "\\\\", ""))) %>% 
  select(-description) %>% 
  datatable(height = "400px",
            options = list(scrollX = TRUE,
                           autoWidth = TRUE,
                           columnDefs = list(list(className = "dt-center", 
                                                  targets = 1:5),
                                             list(width = '450px',
                                                  targets = 6:7),
                                             list(width = '220px',
                                                  targets = 4),
                                             list(width = '180px',
                                                  targets = 2)),
                           pageLength = 3)) %>% 
  formatStyle(columns = c(6,7), fontSize = '80%')
```
:::


::: {.content-hidden unless-format="pdf"}
Here is an example of the data.
```{r}
unidata %>% 
  mutate(across(c(Outcomes, Overview, description), 
                ~ str_replace_all(.x, "\\\\", ""))) %>% 
  select(-description) %>% 
  head(2) %>% 
  kable() %>% 
  kable_styling(latex_options = c("striped", "scale_down"), font_size = 12)
```
:::


